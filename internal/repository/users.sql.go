// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: users.sql

package repository

import (
	"context"

	"github.com/google/uuid"
	"github.com/jackc/pgx/v5/pgtype"
)

const createUser = `-- name: CreateUser :one
INSERT INTO users (email, first_name, last_name) 
VALUES ($1, $2, $3)
RETURNING user_id, email, first_name, last_name
`

type CreateUserParams struct {
	Email     pgtype.Text `json:"email"`
	FirstName string      `json:"first_name"`
	LastName  string      `json:"last_name"`
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) (User, error) {
	row := q.db.QueryRow(ctx, createUser, arg.Email, arg.FirstName, arg.LastName)
	var i User
	err := row.Scan(
		&i.UserID,
		&i.Email,
		&i.FirstName,
		&i.LastName,
	)
	return i, err
}

const getUser = `-- name: GetUser :one
SELECT user_id, email, first_name, last_name FROM users WHERE user_id = $1
`

func (q *Queries) GetUser(ctx context.Context, userID uuid.UUID) (User, error) {
	row := q.db.QueryRow(ctx, getUser, userID)
	var i User
	err := row.Scan(
		&i.UserID,
		&i.Email,
		&i.FirstName,
		&i.LastName,
	)
	return i, err
}
